<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '10',
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '255',
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('role', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'disabled',
              1 => 'normal',
              2 => 'admin',
             ),
             'notnull' => true,
             'default' => 'normal',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('token', 'string', 32, array(
             'type' => 'string',
             'length' => '32',
             ));
        $this->hasColumn('nftoken', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('nfsecret', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('nfauth', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasMany('Movie as Movies', array(
             'local' => 'id',
             'foreign' => 'author'));

        $this->hasMany('Beer as Beers', array(
             'local' => 'id',
             'foreign' => 'author'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}